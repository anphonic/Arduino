<VisualMicro>
  <Program Name="motorControl" Ext=".ino" Location="C:\Users\Juggernaught\Documents\Arduino\motorControl">
    <Compile ReCompileIfSourceIsNewer="1" IsDebugStart="1" CompilerErrors="0" ConfigurationName="Debug" StopOnError="False" OptimiseLibs="True" OptimiseCore="True" BuildPath="C:\Users\Juggernaught\AppData\Local\Temp\VMicroBuilds\motorControl\uno" SketchName="motorControl" ReportDigitalPins="0" ReportAnalogPins="0" ReportI2C="0" ReportFreeMemory="0" IncludeDebug="1" LastDebugPreProcessorDefinitions="VM_DEBUG;VM_DEBUG_ENABLE 1;VM_DEBUG_BANDWIDTH_THROTTLE_MS 100;VM_DEBUGGER_TYPE_HARDWARESERIAL 0;VM_DEBUGGER_TYPE_SOFTWARESERIAL 1;VM_DEBUGGER_TYPE_FASTSERIAL 2;VM_DEBUGGER_TYPE_USB 3;VM_DEBUGGER_TYPE_TEENSY 4;VM_DEBUGGER_TYPE_UART 5;VM_DEBUGGER_TYPE_USART 6;VM_DEBUGGER_TYPE_USBSERIAL 7;VM_DEBUGGER_TYPE_TTYUART 8;VM_DEBUGGER_TYPE_NET_CONSOLE 9;VM_DEBUGGER_TYPE_Uart 10;VM_DEBUGGER_TYPE_COSA 11;VM_DEBUGGER_TYPE_CDCSerialClass 12;VM_DEBUGGER_TYPE VM_DEBUGGER_TYPE_HARDWARESERIAL;VM_DEBUG_BREAKPAUSE;" IncludesDebug="1" IsCompiled="1" />
    <Platform Name="arduino_org17x" Package="arduino" Platform="avr" Architecture="avr">
      <Board Name="uno" Description="Arduino/Genuino Uno" CoreFolder="c:\Program Files (x86)\Arduino\hardware\arduino\avr\cores\arduino" VariantFullPath="c:\Program Files (x86)\Arduino\hardware\arduino\avr\variants\standard" McuIdePath="c:\Program Files (x86)\Arduino\" McuSketchBookPath="C:\Users\Juggernaught\Documents\Arduino" name="Arduino/Genuino Uno" vid.0="0x2341" pid.0="0x0043" vid.1="0x2341" pid.1="0x0001" vid.2="0x2A03" pid.2="0x0043" vid.3="0x2341" pid.3="0x0243" upload.tool="avrdude" upload.protocol="arduino" upload.maximum_size="32256" upload.maximum_data_size="2048" upload.speed="115200" bootloader.tool="avrdude" bootloader.low_fuses="0xFF" bootloader.high_fuses="0xDE" bootloader.extended_fuses="0x05" bootloader.unlock_bits="0x3F" bootloader.lock_bits="0x0F" bootloader.file="optiboot/optiboot_atmega328.hex" build.mcu="atmega328p" build.f_cpu="16000000L" build.board="AVR_UNO" build.core="arduino" build.variant="standard" runtime.ide.path="c:\Program Files (x86)\Arduino\" build.system.path="c:\Program Files (x86)\Arduino\hardware\arduino\avr\system" runtime.ide.version="10608" target_package="arduino" target_platform="avr" runtime.hardware.path="c:\Program Files (x86)\Arduino\hardware\arduino" originalid="uno" tools.atprogram.cmd.path="%AVRSTUDIO_EXE_PATH%\atbackend\atprogram" tools.atprogram.cmd.setwinpath="true" tools.atprogram.program.params.verbose="-v" tools.atprogram.program.params.quiet="-q" tools.atprogram.program.pattern="&quot;{cmd.path}&quot; -d {build.mcu} {program.verbose} {program.extra_params} program -c -f &quot;{build.path}\{build.project_name}.hex&quot;" tools.atprogram.program.xpattern="&quot;{cmd.path}&quot; {AVRSTUDIO_BACKEND_CONNECTION} -d {build.mcu} {program.verbose} {program.extra_params} program -c -f &quot;{build.path}\{build.project_name}.hex&quot;" version="1.6.10" compiler.warning_flags="-w" compiler.warning_flags.none="-w" compiler.warning_flags.default="" compiler.warning_flags.more="-Wall" compiler.warning_flags.all="-Wall -Wextra" compiler.path="{runtime.tools.avr-gcc.path}/bin/" compiler.c.cmd="avr-gcc" compiler.c.flags="-c -g -Os {compiler.warning_flags} -std=gnu11 -ffunction-sections -fdata-sections -MMD" compiler.c.elf.flags="{compiler.warning_flags} -Os -Wl,--gc-sections" compiler.c.elf.cmd="avr-gcc" compiler.S.flags="-c -g -x assembler-with-cpp" compiler.cpp.cmd="avr-g++" compiler.cpp.flags="-c -g -Os {compiler.warning_flags} -std=gnu++11 -fno-exceptions -ffunction-sections -fdata-sections -fno-threadsafe-statics -MMD" compiler.ar.cmd="avr-ar" compiler.ar.flags="rcs" compiler.objcopy.cmd="avr-objcopy" compiler.objcopy.eep.flags="-O ihex -j .eeprom --set-section-flags=.eeprom=alloc,load --no-change-warnings --change-section-lma .eeprom=0" compiler.elf2hex.flags="-O ihex -R .eeprom" compiler.elf2hex.cmd="avr-objcopy" compiler.ldflags="" compiler.size.cmd="avr-size" build.extra_flags="" compiler.c.extra_flags="" compiler.c.elf.extra_flags="" compiler.S.extra_flags="" compiler.cpp.extra_flags="" compiler.ar.extra_flags="" compiler.objcopy.eep.extra_flags="" compiler.elf2hex.extra_flags="" recipe.c.o.pattern="&quot;{compiler.path}{compiler.c.cmd}&quot; {compiler.c.flags} -mmcu={build.mcu} -DF_CPU={build.f_cpu} -DARDUINO={runtime.ide.version} -DARDUINO_{build.board} -DARDUINO_ARCH_{build.arch} {compiler.c.extra_flags} {build.extra_flags} {includes} &quot;{source_file}&quot; -o &quot;{object_file}&quot;" recipe.cpp.o.pattern="&quot;{compiler.path}{compiler.cpp.cmd}&quot; {compiler.cpp.flags} -mmcu={build.mcu} -DF_CPU={build.f_cpu} -DARDUINO={runtime.ide.version} -DARDUINO_{build.board} -DARDUINO_ARCH_{build.arch} {compiler.cpp.extra_flags} {build.extra_flags} {includes} &quot;{source_file}&quot; -o &quot;{object_file}&quot;" recipe.S.o.pattern="&quot;{compiler.path}{compiler.c.cmd}&quot; {compiler.S.flags} -mmcu={build.mcu} -DF_CPU={build.f_cpu} -DARDUINO={runtime.ide.version} -DARDUINO_{build.board} -DARDUINO_ARCH_{build.arch} {compiler.S.extra_flags} {build.extra_flags} {includes} &quot;{source_file}&quot; -o &quot;{object_file}&quot;" recipe.ar.pattern="&quot;{compiler.path}{compiler.ar.cmd}&quot; {compiler.ar.flags} {compiler.ar.extra_flags} &quot;{archive_file_path}&quot; &quot;{object_file}&quot;" recipe.c.combine.pattern="&quot;{compiler.path}{compiler.c.elf.cmd}&quot; {compiler.c.elf.flags} -mmcu={build.mcu} {compiler.c.elf.extra_flags} -o &quot;{build.path}/{build.project_name}.elf&quot; {object_files} &quot;{build.path}/{archive_file}&quot; &quot;-L{build.path}&quot; -lm" recipe.objcopy.eep.pattern="&quot;{compiler.path}{compiler.objcopy.cmd}&quot; {compiler.objcopy.eep.flags} {compiler.objcopy.eep.extra_flags} &quot;{build.path}/{build.project_name}.elf&quot; &quot;{build.path}/{build.project_name}.eep&quot;" recipe.objcopy.hex.pattern="&quot;{compiler.path}{compiler.elf2hex.cmd}&quot; {compiler.elf2hex.flags} {compiler.elf2hex.extra_flags} &quot;{build.path}/{build.project_name}.elf&quot; &quot;{build.path}/{build.project_name}.hex&quot;" recipe.output.tmp_file="{build.project_name}.hex" recipe.output.save_file="{build.project_name}.{build.variant}.hex" recipe.size.pattern="&quot;{compiler.path}{compiler.size.cmd}&quot; -A &quot;{build.path}/{build.project_name}.elf&quot;" recipe.size.regex="^(?:\.text|\.data|\.bootloader)\s+([0-9]+).*" recipe.size.regex.data="^(?:\.data|\.bss|\.noinit)\s+([0-9]+).*" recipe.size.regex.eeprom="^(?:\.eeprom)\s+([0-9]+).*" preproc.includes.flags="-w -x c++ -M -MG -MP" recipe.preproc.includes="&quot;{compiler.path}{compiler.cpp.cmd}&quot; {compiler.cpp.flags} {preproc.includes.flags} -mmcu={build.mcu} -DF_CPU={build.f_cpu} -DARDUINO={runtime.ide.version} -DARDUINO_{build.board} -DARDUINO_ARCH_{build.arch} {compiler.cpp.extra_flags} {build.extra_flags} {includes} &quot;{source_file}&quot;" preproc.macros.flags="-w -x c++ -E -CC" recipe.preproc.macros="&quot;{compiler.path}{compiler.cpp.cmd}&quot; {compiler.cpp.flags} {preproc.macros.flags} -mmcu={build.mcu} -DF_CPU={build.f_cpu} -DARDUINO={runtime.ide.version} -DARDUINO_{build.board} -DARDUINO_ARCH_{build.arch} {compiler.cpp.extra_flags} {build.extra_flags} {includes} &quot;{source_file}&quot; -o &quot;{preprocessed_file_path}&quot;" tools.avrdude.path="{runtime.tools.avrdude.path}" tools.avrdude.cmd.path="{path}/bin/avrdude" tools.avrdude.config.path="{path}/etc/avrdude.conf" tools.avrdude.upload.params.verbose="-v" tools.avrdude.upload.params.quiet="-q -q" tools.avrdude.upload.pattern="&quot;{cmd.path}&quot; &quot;-C{config.path}&quot; {upload.verbose} -p{build.mcu} -c{upload.protocol} -P{serial.port} -b{upload.speed} -D &quot;-Uflash:w:{build.path}/{build.project_name}.hex:i&quot;" tools.avrdude.program.params.verbose="-v" tools.avrdude.program.params.quiet="-q -q" tools.avrdude.program.pattern="&quot;{cmd.path}&quot; &quot;-C{config.path}&quot; {program.verbose} -p{build.mcu} -c{protocol} {program.extra_params} &quot;-Uflash:w:{build.path}/{build.project_name}.hex:i&quot;" tools.avrdude.erase.params.verbose="-v" tools.avrdude.erase.params.quiet="-q -q" tools.avrdude.erase.pattern="&quot;{cmd.path}&quot; &quot;-C{config.path}&quot; {erase.verbose} -p{build.mcu} -c{protocol} {program.extra_params} -e -Ulock:w:{bootloader.unlock_bits}:m -Uefuse:w:{bootloader.extended_fuses}:m -Uhfuse:w:{bootloader.high_fuses}:m -Ulfuse:w:{bootloader.low_fuses}:m" tools.avrdude.bootloader.params.verbose="-v" tools.avrdude.bootloader.params.quiet="-q -q" tools.avrdude.bootloader.pattern="&quot;{cmd.path}&quot; &quot;-C{config.path}&quot; {bootloader.verbose} -p{build.mcu} -c{protocol} {program.extra_params} &quot;-Uflash:w:{runtime.platform.path}/bootloaders/{bootloader.file}:i&quot; -Ulock:w:{bootloader.lock_bits}:m" build.usb_manufacturer="&quot;Unknown&quot;" build.usb_flags="-DUSB_VID={build.vid} -DUSB_PID={build.pid} '-DUSB_MANUFACTURER={build.usb_manufacturer}' '-DUSB_PRODUCT={build.usb_product}'" vm.platform.root.path="C:\Program Files (x86)\Microsoft Visual Studio 12.0\Common7\IDE\Extensions\pxczkypz.si5\Micro Platforms\arduino_org17x" avrisp.name="AVR ISP" avrisp.communication="serial" avrisp.protocol="stk500v1" avrisp.program.protocol="stk500v1" avrisp.program.tool="avrdude" avrisp.program.extra_params="-P{serial.port}" avrispmkii.name="AVRISP mkII" avrispmkii.communication="usb" avrispmkii.protocol="stk500v2" avrispmkii.program.protocol="stk500v2" avrispmkii.program.tool="avrdude" avrispmkii.program.extra_params="-Pusb" usbtinyisp.name="USBtinyISP" usbtinyisp.protocol="usbtiny" usbtinyisp.program.tool="avrdude" usbtinyisp.program.extra_params="" arduinoisp.name="ArduinoISP" arduinoisp.protocol="arduinoisp" arduinoisp.program.tool="avrdude" arduinoisp.program.extra_params="" usbasp.name="USBasp" usbasp.communication="usb" usbasp.protocol="usbasp" usbasp.program.protocol="usbasp" usbasp.program.tool="avrdude" usbasp.program.extra_params="-Pusb" parallel.name="Parallel Programmer" parallel.protocol="dapa" parallel.force="true" parallel.program.tool="avrdude" parallel.program.extra_params="-F" arduinoasisp.name="Arduino as ISP" arduinoasisp.communication="serial" arduinoasisp.protocol="stk500v1" arduinoasisp.speed="19200" arduinoasisp.program.protocol="stk500v1" arduinoasisp.program.speed="19200" arduinoasisp.program.tool="avrdude" arduinoasisp.program.extra_params="-P{serial.port} -b{program.speed}" usbGemma.name="Arduino Gemma" usbGemma.protocol="arduinogemma" usbGemma.program.tool="avrdude" usbGemma.program.extra_params="" usbGemma.config.path="{runtime.platform.path}/bootloaders/gemma/avrdude.conf" stk500.name="Atmel STK500 development board" stk500.communication="serial" stk500.protocol="stk500" stk500.program.protocol="stk500" stk500.program.tool="avrdude" stk500.program.extra_params="-P{serial.port}" buspirate.name="BusPirate as ISP" buspirate.communication="serial" buspirate.protocol="buspirate" buspirate.program.protocol="buspirate" buspirate.program.tool="avrdude" buspirate.program.extra_params="-P{serial.port}" runtime.tools.avrdude.path="c:\Program Files (x86)\Arduino\hardware\tools\avr" runtime.tools.avrdude-6.0.1-arduino5.path="c:\Program Files (x86)\Arduino\hardware\tools\avr" runtime.tools.avr-gcc.path="c:\Program Files (x86)\Arduino\hardware\tools\avr" runtime.tools.avr-gcc-4.8.1-arduino5.path="c:\Program Files (x86)\Arduino\hardware\tools\avr" ide.hint="For use with Arduino.org 1.7 version. (Same as Arduino.cc 1.5)" ide.location.key="Arduino15x" ide.location.ide.winreg="ArduinoOrg 1.7.x Application" ide.location.sketchbook.winreg="ArduinoOrg 1.7.x Sketchbook" ide.location.sketchbook.preferences="sketchbook.path" ide.location.preferences="%VM_APPDATA_ROAMING%\arduino15\preferences.txt" ide.location.preferences_fallback="%VM_APPDATA_ROAMING%\arduino\preferences.txt" ide.location.preferences.portable="{runtime.ide.path}\portable" ide.default.version="150" ide.default.package="arduino" ide.default.platform="avr" ide.multiplatform="true" ide.includes="arduino.h" ide.platformswithoutpackage="false" ide.includes.fallback="wprogram.h" ide.extension="ino" ide.extension.fallback="pde" ide.versionGTEQ="150" ide.exe="arduino.exe" ide.hosts="atmel" ide.url="http://www.arduino.org/software#ide" vm.debug="true" software="ARDUINO" ssh.user.name="root" ssh.user.default.password="arduino" ssh.host.wwwfiles.path="/www/sd" build.working_directory="{runtime.ide.path}" ide.help.reference.path="reference\arduino.cc\en\Reference" ide.location.contributions="%VM_APPDATA_ROAMING%\arduino15" ide.contributions.boards.allow="true" ide.contributions.boards.ignore_unless_rewrite_found="true" ide.contributions.libraries.allow="true" ide.contributions.boards.support.urls.wiki="https://github.com/arduino/Arduino/wiki/Unofficial-list-of-3rd-party-boards-support-urls" ide.appid="arduino_org17x" location.sketchbook="C:\Users\Juggernaught\Documents\Arduino" build.core.vmresolved="c:\Program Files (x86)\Arduino\hardware\arduino\avr\cores\arduino" build.core.parentfolder.vmresolved="c:\Program Files (x86)\Arduino\hardware\arduino\avr\cores" build.core.coresparentfolder.vmresolved="c:\Program Files (x86)\Arduino\hardware\arduino\avr" vm.core.include="arduino.h" vm.boardsource.path="c:\Program Files (x86)\Arduino\hardware\arduino\avr" runtime.platform.path="c:\Program Files (x86)\Arduino\hardware\arduino\avr" vm.platformname.name="avr" build.arch="AVR" build.variant.vmresolved="c:\Program Files (x86)\Arduino\hardware\arduino\avr\variants\standard" build.architecture="avr" vmresolved.compiler.path="c:\Program Files (x86)\Arduino\hardware\tools\avr\bin\" vmresolved.tools.path="c:\Program Files (x86)\Arduino\hardware\tools\avr" vm.runtime.compiler.showwarnings="false" vm.runtime.compiler.auto_discover_includes="true" vm.last.buildpath="C:\Users\Juggernaught\AppData\Local\Temp\VMicroBuilds\motorControl\uno" vm.build.verbose_build_properties="false" build.source.path="C:\Users\Juggernaught\Documents\Arduino\motorControl\motorControl.ino" build.path="C:\Users\Juggernaught\AppData\Local\Temp\VMicroBuilds\motorControl\uno" PreProcessor.HeaderCount="1" PreProcessor.PrototypeCount="7" vm.last.preproc.file.0.file="motorControl.ino" vm.last.preproc.file.0.offset="1" vm.last.preproc.file.0.length="1271" vm.last.preproc.file.0.linecount="31" vm.last.preproc.file.0.linestart="0" vm.last.preproc.file.0.lineend="31" vm.last.preproc.file.0.prefix_lines="2" serial.port.file="COM3" serial.port="COM3" serial.port.num="3" sketch_path="C:\Users\Juggernaught\Documents\Arduino\motorControl" build.project_name="motorControl.ino" runtime.vm.ide.platforms.path="C:\Program Files (x86)\Microsoft Visual Studio 12.0\Common7\IDE\Extensions\pxczkypz.si5\Micro Platforms" build.variant.path="c:\Program Files (x86)\Arduino\hardware\arduino\avr\variants\standard" build.core.path="c:\Program Files (x86)\Arduino\hardware\arduino\avr\cores\arduino" archive_file="core.a" archive_file_path="C:\Users\Juggernaught\AppData\Local\Temp\VMicroBuilds\motorControl\uno\core.a" extra.time.local="16472525" tools.ctags.path="{runtime.tools.ctags.path}" tools.ctags.cmd.path="{path}/ctags" tools.ctags.pattern="&quot;{cmd.path}&quot; -u --language-force=c++ -f - --c++-kinds=svpf --fields=KSTtzns --line-directives &quot;{source_file}&quot;" preproc.includes.compatibility_flags="{build.mbed_api_include} {build.nRF51822_api_include} {build.ble_api_include} {compiler.libsam.c.flags} {compiler.arm.cmsis.path} {build.variant_system_include}" preproc.macros.compatibility_flags="{build.mbed_api_include} {build.nRF51822_api_include} {build.ble_api_include} {compiler.libsam.c.flags} {compiler.arm.cmsis.path} {build.variant_system_include}" vm_all_includes=" -I&quot;c:\Program Files (x86)\Arduino\hardware\arduino\avr\cores\arduino&quot;  -I&quot;c:\Program Files (x86)\Arduino\hardware\arduino\avr\variants\standard&quot;  -I&quot;C:\Program Files (x86)\Microsoft Visual Studio 12.0\Common7\IDE\Extensions\pxczkypz.si5\Micro Platforms\default\debuggers\VM_DBG&quot;  -I&quot;C:\Program Files (x86)\Microsoft Visual Studio 12.0\Common7\IDE\Extensions\pxczkypz.si5\Micro Platforms\default\debuggers&quot;  -I&quot;c:\Program Files (x86)\Arduino\libraries&quot;  -I&quot;c:\Program Files (x86)\Arduino\hardware\arduino\avr\libraries&quot;  -I&quot;C:\Users\Juggernaught\Documents\Arduino\libraries&quot; " vm_core_includes=" -I&quot;c:\Program Files (x86)\Arduino\hardware\arduino\avr\cores\arduino&quot;  -I&quot;c:\Program Files (x86)\Arduino\hardware\arduino\avr\variants\standard&quot; " includes=" -I&quot;c:\Program Files (x86)\Arduino\hardware\arduino\avr\cores\arduino&quot;  -I&quot;c:\Program Files (x86)\Arduino\hardware\arduino\avr\variants\standard&quot;  -I&quot;C:\Program Files (x86)\Microsoft Visual Studio 12.0\Common7\IDE\Extensions\pxczkypz.si5\Micro Platforms\default\debuggers\VM_DBG&quot;  -I&quot;C:\Program Files (x86)\Microsoft Visual Studio 12.0\Common7\IDE\Extensions\pxczkypz.si5\Micro Platforms\default\debuggers&quot;  -I&quot;c:\Program Files (x86)\Arduino\libraries&quot;  -I&quot;c:\Program Files (x86)\Arduino\hardware\arduino\avr\libraries&quot;  -I&quot;C:\Users\Juggernaught\Documents\Arduino\libraries&quot; " build.path_sketch="C:\Users\Juggernaught\AppData\Local\Temp\VMicroBuilds\motorControl\uno" build.path_core="C:\Users\Juggernaught\AppData\Local\Temp\VMicroBuilds\motorControl\uno\core" build.path_libraries="C:\Users\Juggernaught\AppData\Local\Temp\VMicroBuilds\motorControl\uno" object_file="C:\Users\Juggernaught\AppData\Local\Temp\VMicroBuilds\motorControl\uno\motorControl.cpp.o" source_file="C:\Users\Juggernaught\AppData\Local\Temp\VMicroBuilds\motorControl\uno\motorControl.cpp" object_files=" &quot;C:\Users\Juggernaught\AppData\Local\Temp\VMicroBuilds\motorControl\uno\motorControl.cpp.o&quot;  &quot;C:\Users\Juggernaught\AppData\Local\Temp\VMicroBuilds\motorControl\uno\VM_DBG\VM_DBG.cpp.o&quot; " />
    </Platform>
    <Debug EnableBreak="1" DebugEnabled="1" IsGdb="0" RemotePortSpeedWrittenToDebugSource="115200" />
    <VCCodeModel>
      <VCCodeMacros />
    </VCCodeModel>
    <BreakPoints>
      <BreakPoint Index="1" Name="motorControl.ino, line 12" Id="89a6d09a-9656-440f-a2b6-5e4ce8063f85" Enabled="1" Message="  Millis is currently {millis()}.&#xD;&#xA;Press F5 to continue.&#xD;&#xA;    Press Ctrl+F5 to stop debugging or close/stop the Serial Monitor&#xD;&#xA;  &#xD;&#xA;    The code is stopped at the start of the loop() function, where you see a red dot.&#xD;&#xA;    The red dot is a ‘breakpoint’.&#xD;&#xA;    This breakpoint is automatically set by Visual Micro to demonstrate the Arduino debugger.&#xD;&#xA;    Add your own breakpoints by placing the cursor on any code line and pressing F9. Press F9 again to delete the breakpoint.&#xD;&#xA;    Read more about the Visual Micro debugger at http://www.visualmicro.com/page/Debugging-for-Arduino.aspx&#xD;&#xA;    Take some time to learn about debugging, it’s worth it!&#xD;&#xA;    To switch the demo breakpoint and other tips off, deselect Visual Micro&gt;Tutorial Mode.&#xD;&#xA;" MessageTextType="0" PreProcessedMessage="  Millis is currently {0}.&#xD;&#xA;Press F5 to continue.&#xD;&#xA;    Press Ctrl+F5 to stop debugging or close/stop the Serial Monitor&#xD;&#xA;  &#xD;&#xA;    The code is stopped at the start of the loop() function, where you see a red dot.&#xD;&#xA;    The red dot is a ‘breakpoint’.&#xD;&#xA;    This breakpoint is automatically set by Visual Micro to demonstrate the Arduino debugger.&#xD;&#xA;    Add your own breakpoints by placing the cursor on any code line and pressing F9. Press F9 again to delete the breakpoint.&#xD;&#xA;    Read more about the Visual Micro debugger at http://www.visualmicro.com/page/Debugging-for-Arduino.aspx&#xD;&#xA;    Take some time to learn about debugging, it’s worth it!&#xD;&#xA;    To switch the demo breakpoint and other tips off, deselect Visual Micro&gt;Tutorial Mode.&#xD;&#xA;" Condition="millis()&gt;0 || millis()&gt;1" ConditionType="1" CurrentHits="0" File="c:\users\juggernaught\documents\arduino\motorcontrol\motorcontrol.ino" FileLine="12" FileColumn="1" FunctionName="" FunctionLineOffset="1" FunctionColumnOffset="1" HitCountTarget="250" HitCountType="4" Language="C++" LocationType="3" Tag="&lt;vmbp Id='89a6d09a-9656-440f-a2b6-5e4ce8063f85'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="1">
        <Source>5	
6		/* add setup code here */
7	
8		pinMode(motorIn1, OUTPUT);
9		pinMode(motorIn2, OUTPUT);
10	}
11	
--&gt;12	void loop()
13	{
14	  /* add main program code here */
15		clockwise(200);
16			delay(1000);
17			counterclockwise(300);
18			delay(1000);
19	}
20	void clockwise(int Speed){
21		analogWrite(motorIn1, Speed);
</Source>
        <MessageVariables>
          <MessageVariable Name="millis()" Index="1" />
        </MessageVariables>
      </BreakPoint>
    </BreakPoints>
  </Program>
</VisualMicro>